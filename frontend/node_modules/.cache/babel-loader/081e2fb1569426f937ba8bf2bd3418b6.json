{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL, PRODUCTS_BY_CATEGORY_SUCCESS, PRODUCTS_BY_CATEGORY_REQUEST, PRODUCTS_BY_CATEGORY_FAIL } from '../constants/productConstants';\nexport const listProducts = _ref => {\n  let {\n    pageNumber = '',\n    seller = '',\n    name = '',\n    category = '',\n    order = '',\n    min = 0,\n    max = 0,\n    rating = 0\n  } = _ref;\n  return async dispatch => {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductsByCategory = category => async dispatch => {\n  dispatch({\n    type: PRODUCTS_BY_CATEGORY_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories/${category}`);\n    dispatch({\n      type: PRODUCTS_BY_CATEGORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCTS_BY_CATEGORY_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product.id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    await Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/francisco/webdev/ProyectoPasteleriaValdivia/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","PRODUCTS_BY_CATEGORY_SUCCESS","PRODUCTS_BY_CATEGORY_REQUEST","PRODUCTS_BY_CATEGORY_FAIL","listProducts","pageNumber","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","getProductsByCategory","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CATEGORY_LIST_SUCCESS,\n  PRODUCT_CATEGORY_LIST_REQUEST,\n  PRODUCT_CATEGORY_LIST_FAIL,\n  PRODUCT_REVIEW_CREATE_REQUEST,\n  PRODUCT_REVIEW_CREATE_SUCCESS,\n  PRODUCT_REVIEW_CREATE_FAIL,\n  PRODUCTS_BY_CATEGORY_SUCCESS,\n  PRODUCTS_BY_CATEGORY_REQUEST,\n  PRODUCTS_BY_CATEGORY_FAIL\n} from '../constants/productConstants';\n\nexport const listProducts =\n  ({\n    pageNumber = '',\n    seller = '',\n    name = '',\n    category = '',\n    order = '',\n    min = 0,\n    max = 0,\n    rating = 0,\n  }) =>\n  async (dispatch) => {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n      const { data } = await Axios.get(\n        `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\n      );\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n  };\n\nexport const listProductCategories = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/products/categories`);\n    \n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getProductsByCategory = (category) => async (dispatch) => {\n  dispatch({\n    type: PRODUCTS_BY_CATEGORY_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(\n      `/api/products/categories/${category}`\n    );\n\n    dispatch({ type: PRODUCTS_BY_CATEGORY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCTS_BY_CATEGORY_FAIL, payload: error.message });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      '/api/products',\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n  }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/products/${product.id}`, product, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n  }\n};\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    await Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n  }\n};\nexport const createReview =\n  (productId, review) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        `/api/products/${productId}/reviews`,\n        review,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: PRODUCT_REVIEW_CREATE_SUCCESS,\n        payload: data.review,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}